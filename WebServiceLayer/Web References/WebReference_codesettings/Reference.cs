//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace WebServiceLayer.WebReference_codesettings {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CodeSettingsV2Soap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BasicShift))]
    public partial class CodeSettingsV2 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAllLeaveInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemParameterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShiftInfoByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOverlapRangeFromDate1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRealTotalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompanyCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecSqlCommandOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecFn_checkmsgOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLeaveSectionsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CodeSettingsV2() {
            this.Url = global::WebServiceLayer.Properties.Settings.Default.WebServiceLayer_WebReference_codesettings_CodeSettingsV2;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAllLeaveInfoCompletedEventHandler GetAllLeaveInfoCompleted;
        
        /// <remarks/>
        public event GetSystemParameterCompletedEventHandler GetSystemParameterCompleted;
        
        /// <remarks/>
        public event GetShiftInfoByIDCompletedEventHandler GetShiftInfoByIDCompleted;
        
        /// <remarks/>
        public event DeleteOverlapRangeFromDate1CompletedEventHandler DeleteOverlapRangeFromDate1Completed;
        
        /// <remarks/>
        public event GetRealTotalCompletedEventHandler GetRealTotalCompleted;
        
        /// <remarks/>
        public event GetCompanyCodeCompletedEventHandler GetCompanyCodeCompleted;
        
        /// <remarks/>
        public event ExecSqlCommandCompletedEventHandler ExecSqlCommandCompleted;
        
        /// <remarks/>
        public event ExecFn_checkmsgCompletedEventHandler ExecFn_checkmsgCompleted;
        
        /// <remarks/>
        public event GetLeaveSectionsCompletedEventHandler GetLeaveSectionsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllLeaveInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LeaveInfo[] GetAllLeaveInfo() {
            object[] results = this.Invoke("GetAllLeaveInfo", new object[0]);
            return ((LeaveInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllLeaveInfoAsync() {
            this.GetAllLeaveInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetAllLeaveInfoAsync(object userState) {
            if ((this.GetAllLeaveInfoOperationCompleted == null)) {
                this.GetAllLeaveInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllLeaveInfoOperationCompleted);
            }
            this.InvokeAsync("GetAllLeaveInfo", new object[0], this.GetAllLeaveInfoOperationCompleted, userState);
        }
        
        private void OnGetAllLeaveInfoOperationCompleted(object arg) {
            if ((this.GetAllLeaveInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllLeaveInfoCompleted(this, new GetAllLeaveInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSystemParameter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSystemParameter(string name) {
            object[] results = this.Invoke("GetSystemParameter", new object[] {
                        name});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemParameterAsync(string name) {
            this.GetSystemParameterAsync(name, null);
        }
        
        /// <remarks/>
        public void GetSystemParameterAsync(string name, object userState) {
            if ((this.GetSystemParameterOperationCompleted == null)) {
                this.GetSystemParameterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemParameterOperationCompleted);
            }
            this.InvokeAsync("GetSystemParameter", new object[] {
                        name}, this.GetSystemParameterOperationCompleted, userState);
        }
        
        private void OnGetSystemParameterOperationCompleted(object arg) {
            if ((this.GetSystemParameterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemParameterCompleted(this, new GetSystemParameterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetShiftInfoByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Shift GetShiftInfoByID(int shiftid) {
            object[] results = this.Invoke("GetShiftInfoByID", new object[] {
                        shiftid});
            return ((Shift)(results[0]));
        }
        
        /// <remarks/>
        public void GetShiftInfoByIDAsync(int shiftid) {
            this.GetShiftInfoByIDAsync(shiftid, null);
        }
        
        /// <remarks/>
        public void GetShiftInfoByIDAsync(int shiftid, object userState) {
            if ((this.GetShiftInfoByIDOperationCompleted == null)) {
                this.GetShiftInfoByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShiftInfoByIDOperationCompleted);
            }
            this.InvokeAsync("GetShiftInfoByID", new object[] {
                        shiftid}, this.GetShiftInfoByIDOperationCompleted, userState);
        }
        
        private void OnGetShiftInfoByIDOperationCompleted(object arg) {
            if ((this.GetShiftInfoByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShiftInfoByIDCompleted(this, new GetShiftInfoByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteOverlapRangeFromDate1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("newStart1", IsNullable=true)]
        public System.Nullable<System.DateTime> DeleteOverlapRangeFromDate1(System.DateTime startDate1, System.DateTime endDate1, System.DateTime startDate2, System.DateTime endDate2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out System.Nullable<System.DateTime> newEnd1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out System.Nullable<System.DateTime> newStart2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out System.Nullable<System.DateTime> newEnd2) {
            object[] results = this.Invoke("DeleteOverlapRangeFromDate1", new object[] {
                        startDate1,
                        endDate1,
                        startDate2,
                        endDate2});
            newEnd1 = ((System.Nullable<System.DateTime>)(results[1]));
            newStart2 = ((System.Nullable<System.DateTime>)(results[2]));
            newEnd2 = ((System.Nullable<System.DateTime>)(results[3]));
            return ((System.Nullable<System.DateTime>)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOverlapRangeFromDate1Async(System.DateTime startDate1, System.DateTime endDate1, System.DateTime startDate2, System.DateTime endDate2) {
            this.DeleteOverlapRangeFromDate1Async(startDate1, endDate1, startDate2, endDate2, null);
        }
        
        /// <remarks/>
        public void DeleteOverlapRangeFromDate1Async(System.DateTime startDate1, System.DateTime endDate1, System.DateTime startDate2, System.DateTime endDate2, object userState) {
            if ((this.DeleteOverlapRangeFromDate1OperationCompleted == null)) {
                this.DeleteOverlapRangeFromDate1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOverlapRangeFromDate1OperationCompleted);
            }
            this.InvokeAsync("DeleteOverlapRangeFromDate1", new object[] {
                        startDate1,
                        endDate1,
                        startDate2,
                        endDate2}, this.DeleteOverlapRangeFromDate1OperationCompleted, userState);
        }
        
        private void OnDeleteOverlapRangeFromDate1OperationCompleted(object arg) {
            if ((this.DeleteOverlapRangeFromDate1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOverlapRangeFromDate1Completed(this, new DeleteOverlapRangeFromDate1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRealTotal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double GetRealTotal(System.DateTime startDate1, System.DateTime endDate1, System.DateTime startDate2, System.DateTime endDate2) {
            object[] results = this.Invoke("GetRealTotal", new object[] {
                        startDate1,
                        endDate1,
                        startDate2,
                        endDate2});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void GetRealTotalAsync(System.DateTime startDate1, System.DateTime endDate1, System.DateTime startDate2, System.DateTime endDate2) {
            this.GetRealTotalAsync(startDate1, endDate1, startDate2, endDate2, null);
        }
        
        /// <remarks/>
        public void GetRealTotalAsync(System.DateTime startDate1, System.DateTime endDate1, System.DateTime startDate2, System.DateTime endDate2, object userState) {
            if ((this.GetRealTotalOperationCompleted == null)) {
                this.GetRealTotalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRealTotalOperationCompleted);
            }
            this.InvokeAsync("GetRealTotal", new object[] {
                        startDate1,
                        endDate1,
                        startDate2,
                        endDate2}, this.GetRealTotalOperationCompleted, userState);
        }
        
        private void OnGetRealTotalOperationCompleted(object arg) {
            if ((this.GetRealTotalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRealTotalCompleted(this, new GetRealTotalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCompanyCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetCompanyCode() {
            object[] results = this.Invoke("GetCompanyCode", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCompanyCodeAsync() {
            this.GetCompanyCodeAsync(null);
        }
        
        /// <remarks/>
        public void GetCompanyCodeAsync(object userState) {
            if ((this.GetCompanyCodeOperationCompleted == null)) {
                this.GetCompanyCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompanyCodeOperationCompleted);
            }
            this.InvokeAsync("GetCompanyCode", new object[0], this.GetCompanyCodeOperationCompleted, userState);
        }
        
        private void OnGetCompanyCodeOperationCompleted(object arg) {
            if ((this.GetCompanyCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompanyCodeCompleted(this, new GetCompanyCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecSqlCommand", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExecSqlCommand(string sql) {
            object[] results = this.Invoke("ExecSqlCommand", new object[] {
                        sql});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExecSqlCommandAsync(string sql) {
            this.ExecSqlCommandAsync(sql, null);
        }
        
        /// <remarks/>
        public void ExecSqlCommandAsync(string sql, object userState) {
            if ((this.ExecSqlCommandOperationCompleted == null)) {
                this.ExecSqlCommandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecSqlCommandOperationCompleted);
            }
            this.InvokeAsync("ExecSqlCommand", new object[] {
                        sql}, this.ExecSqlCommandOperationCompleted, userState);
        }
        
        private void OnExecSqlCommandOperationCompleted(object arg) {
            if ((this.ExecSqlCommandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecSqlCommandCompleted(this, new ExecSqlCommandCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecFn_checkmsg", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ExecFn_checkmsg(int uid, int eid, string ssid, decimal lat, decimal lng, System.DateTime checkedtime, string lang) {
            object[] results = this.Invoke("ExecFn_checkmsg", new object[] {
                        uid,
                        eid,
                        ssid,
                        lat,
                        lng,
                        checkedtime,
                        lang});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ExecFn_checkmsgAsync(int uid, int eid, string ssid, decimal lat, decimal lng, System.DateTime checkedtime, string lang) {
            this.ExecFn_checkmsgAsync(uid, eid, ssid, lat, lng, checkedtime, lang, null);
        }
        
        /// <remarks/>
        public void ExecFn_checkmsgAsync(int uid, int eid, string ssid, decimal lat, decimal lng, System.DateTime checkedtime, string lang, object userState) {
            if ((this.ExecFn_checkmsgOperationCompleted == null)) {
                this.ExecFn_checkmsgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecFn_checkmsgOperationCompleted);
            }
            this.InvokeAsync("ExecFn_checkmsg", new object[] {
                        uid,
                        eid,
                        ssid,
                        lat,
                        lng,
                        checkedtime,
                        lang}, this.ExecFn_checkmsgOperationCompleted, userState);
        }
        
        private void OnExecFn_checkmsgOperationCompleted(object arg) {
            if ((this.ExecFn_checkmsgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecFn_checkmsgCompleted(this, new ExecFn_checkmsgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLeaveSections", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetLeaveSections(int leaveClass, int position) {
            object[] results = this.Invoke("GetLeaveSections", new object[] {
                        leaveClass,
                        position});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLeaveSectionsAsync(int leaveClass, int position) {
            this.GetLeaveSectionsAsync(leaveClass, position, null);
        }
        
        /// <remarks/>
        public void GetLeaveSectionsAsync(int leaveClass, int position, object userState) {
            if ((this.GetLeaveSectionsOperationCompleted == null)) {
                this.GetLeaveSectionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLeaveSectionsOperationCompleted);
            }
            this.InvokeAsync("GetLeaveSections", new object[] {
                        leaveClass,
                        position}, this.GetLeaveSectionsOperationCompleted, userState);
        }
        
        private void OnGetLeaveSectionsOperationCompleted(object arg) {
            if ((this.GetLeaveSectionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLeaveSectionsCompleted(this, new GetLeaveSectionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LeaveInfo {
        
        private int idField;
        
        private string codeField;
        
        private string descriptionField;
        
        private double payRatioField;
        
        private bool isAverageDailyRateField;
        
        private int statusField;
        
        private int portalStatusField;
        
        private bool isAccumulableLeaveField;
        
        private bool isEnforceAttachmentField;
        
        private bool isInclude713Field;
        
        private string accountCodeLeaveField;
        
        private int paySlipReportGroupField;
        
        private bool isAdjustInNextMonthField;
        
        private string leaveNotesField;
        
        private string entitleEffectiveDateField;
        
        private bool isIncludeGratuityField;
        
        private int accumulableLeaveTypeField;
        
        private int entitledByField;
        
        private int applyRequirementField;
        
        private decimal leaveExpiryAfterValueField;
        
        private decimal leaveAllowApplyBeforeValueField;
        
        private int leaveExpiryAfterUnitField;
        
        private int leaveAllowApplyBeforeUnitField;
        
        private bool isEnableAdvanceLeaveOnPortalField;
        
        private double launchConditionField;
        
        private double aLRoundUpOptionField;
        
        private string commonLeaveYearField;
        
        private bool isCompareEOLeaveField;
        
        private int carryForwardByField;
        
        private int grantEntitlementMethodField;
        
        private int entitleExpiryWaysField;
        
        private System.Nullable<int> entitleExpiryByAfterCarryForwardDateInMonthField;
        
        private System.Nullable<int> entitleExpiryByAfterCarryForwardDateInDayField;
        
        private string entitleExpiryBySpecificDateField;
        
        private System.Nullable<int> backpayPayitemTypeIDField;
        
        private bool isUseTwelveMonthDailyRateInConsecutiveDayField;
        
        private int maxEntitlementFrequencyField;
        
        private bool isEnableAdvanceLeaveOnYearEndField;
        
        private double attachmentToleranceField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public double PayRatio {
            get {
                return this.payRatioField;
            }
            set {
                this.payRatioField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAverageDailyRate {
            get {
                return this.isAverageDailyRateField;
            }
            set {
                this.isAverageDailyRateField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int PortalStatus {
            get {
                return this.portalStatusField;
            }
            set {
                this.portalStatusField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAccumulableLeave {
            get {
                return this.isAccumulableLeaveField;
            }
            set {
                this.isAccumulableLeaveField = value;
            }
        }
        
        /// <remarks/>
        public bool IsEnforceAttachment {
            get {
                return this.isEnforceAttachmentField;
            }
            set {
                this.isEnforceAttachmentField = value;
            }
        }
        
        /// <remarks/>
        public bool IsInclude713 {
            get {
                return this.isInclude713Field;
            }
            set {
                this.isInclude713Field = value;
            }
        }
        
        /// <remarks/>
        public string AccountCodeLeave {
            get {
                return this.accountCodeLeaveField;
            }
            set {
                this.accountCodeLeaveField = value;
            }
        }
        
        /// <remarks/>
        public int PaySlipReportGroup {
            get {
                return this.paySlipReportGroupField;
            }
            set {
                this.paySlipReportGroupField = value;
            }
        }
        
        /// <remarks/>
        public bool IsAdjustInNextMonth {
            get {
                return this.isAdjustInNextMonthField;
            }
            set {
                this.isAdjustInNextMonthField = value;
            }
        }
        
        /// <remarks/>
        public string LeaveNotes {
            get {
                return this.leaveNotesField;
            }
            set {
                this.leaveNotesField = value;
            }
        }
        
        /// <remarks/>
        public string EntitleEffectiveDate {
            get {
                return this.entitleEffectiveDateField;
            }
            set {
                this.entitleEffectiveDateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsIncludeGratuity {
            get {
                return this.isIncludeGratuityField;
            }
            set {
                this.isIncludeGratuityField = value;
            }
        }
        
        /// <remarks/>
        public int AccumulableLeaveType {
            get {
                return this.accumulableLeaveTypeField;
            }
            set {
                this.accumulableLeaveTypeField = value;
            }
        }
        
        /// <remarks/>
        public int EntitledBy {
            get {
                return this.entitledByField;
            }
            set {
                this.entitledByField = value;
            }
        }
        
        /// <remarks/>
        public int ApplyRequirement {
            get {
                return this.applyRequirementField;
            }
            set {
                this.applyRequirementField = value;
            }
        }
        
        /// <remarks/>
        public decimal LeaveExpiryAfterValue {
            get {
                return this.leaveExpiryAfterValueField;
            }
            set {
                this.leaveExpiryAfterValueField = value;
            }
        }
        
        /// <remarks/>
        public decimal LeaveAllowApplyBeforeValue {
            get {
                return this.leaveAllowApplyBeforeValueField;
            }
            set {
                this.leaveAllowApplyBeforeValueField = value;
            }
        }
        
        /// <remarks/>
        public int LeaveExpiryAfterUnit {
            get {
                return this.leaveExpiryAfterUnitField;
            }
            set {
                this.leaveExpiryAfterUnitField = value;
            }
        }
        
        /// <remarks/>
        public int LeaveAllowApplyBeforeUnit {
            get {
                return this.leaveAllowApplyBeforeUnitField;
            }
            set {
                this.leaveAllowApplyBeforeUnitField = value;
            }
        }
        
        /// <remarks/>
        public bool IsEnableAdvanceLeaveOnPortal {
            get {
                return this.isEnableAdvanceLeaveOnPortalField;
            }
            set {
                this.isEnableAdvanceLeaveOnPortalField = value;
            }
        }
        
        /// <remarks/>
        public double LaunchCondition {
            get {
                return this.launchConditionField;
            }
            set {
                this.launchConditionField = value;
            }
        }
        
        /// <remarks/>
        public double ALRoundUpOption {
            get {
                return this.aLRoundUpOptionField;
            }
            set {
                this.aLRoundUpOptionField = value;
            }
        }
        
        /// <remarks/>
        public string CommonLeaveYear {
            get {
                return this.commonLeaveYearField;
            }
            set {
                this.commonLeaveYearField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCompareEOLeave {
            get {
                return this.isCompareEOLeaveField;
            }
            set {
                this.isCompareEOLeaveField = value;
            }
        }
        
        /// <remarks/>
        public int CarryForwardBy {
            get {
                return this.carryForwardByField;
            }
            set {
                this.carryForwardByField = value;
            }
        }
        
        /// <remarks/>
        public int GrantEntitlementMethod {
            get {
                return this.grantEntitlementMethodField;
            }
            set {
                this.grantEntitlementMethodField = value;
            }
        }
        
        /// <remarks/>
        public int EntitleExpiryWays {
            get {
                return this.entitleExpiryWaysField;
            }
            set {
                this.entitleExpiryWaysField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> EntitleExpiryByAfterCarryForwardDateInMonth {
            get {
                return this.entitleExpiryByAfterCarryForwardDateInMonthField;
            }
            set {
                this.entitleExpiryByAfterCarryForwardDateInMonthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> EntitleExpiryByAfterCarryForwardDateInDay {
            get {
                return this.entitleExpiryByAfterCarryForwardDateInDayField;
            }
            set {
                this.entitleExpiryByAfterCarryForwardDateInDayField = value;
            }
        }
        
        /// <remarks/>
        public string EntitleExpiryBySpecificDate {
            get {
                return this.entitleExpiryBySpecificDateField;
            }
            set {
                this.entitleExpiryBySpecificDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> BackpayPayitemTypeID {
            get {
                return this.backpayPayitemTypeIDField;
            }
            set {
                this.backpayPayitemTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public bool IsUseTwelveMonthDailyRateInConsecutiveDay {
            get {
                return this.isUseTwelveMonthDailyRateInConsecutiveDayField;
            }
            set {
                this.isUseTwelveMonthDailyRateInConsecutiveDayField = value;
            }
        }
        
        /// <remarks/>
        public int MaxEntitlementFrequency {
            get {
                return this.maxEntitlementFrequencyField;
            }
            set {
                this.maxEntitlementFrequencyField = value;
            }
        }
        
        /// <remarks/>
        public bool IsEnableAdvanceLeaveOnYearEnd {
            get {
                return this.isEnableAdvanceLeaveOnYearEndField;
            }
            set {
                this.isEnableAdvanceLeaveOnYearEndField = value;
            }
        }
        
        /// <remarks/>
        public double AttachmentTolerance {
            get {
                return this.attachmentToleranceField;
            }
            set {
                this.attachmentToleranceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class t_CustomProp {
        
        private int propCfgIDField;
        
        private int relatedIDField;
        
        private string valueField;
        
        private System.DateTime createDateField;
        
        private int createUserField;
        
        private System.DateTime modifiedDateField;
        
        private int modifiedUserField;
        
        /// <remarks/>
        public int PropCfgID {
            get {
                return this.propCfgIDField;
            }
            set {
                this.propCfgIDField = value;
            }
        }
        
        /// <remarks/>
        public int RelatedID {
            get {
                return this.relatedIDField;
            }
            set {
                this.relatedIDField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public int CreateUser {
            get {
                return this.createUserField;
            }
            set {
                this.createUserField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public int ModifiedUser {
            get {
                return this.modifiedUserField;
            }
            set {
                this.modifiedUserField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Shift))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BasicShift {
        
        private int idField;
        
        private string codeField;
        
        private string descriptionField;
        
        private System.DateTime bankOnTimeField;
        
        private System.DateTime bankOffTimeField;
        
        private double totalWorkHourField;
        
        private string mainShiftField;
        
        private byte shiftTypeField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BankOnTime {
            get {
                return this.bankOnTimeField;
            }
            set {
                this.bankOnTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BankOffTime {
            get {
                return this.bankOffTimeField;
            }
            set {
                this.bankOffTimeField = value;
            }
        }
        
        /// <remarks/>
        public double TotalWorkHour {
            get {
                return this.totalWorkHourField;
            }
            set {
                this.totalWorkHourField = value;
            }
        }
        
        /// <remarks/>
        public string MainShift {
            get {
                return this.mainShiftField;
            }
            set {
                this.mainShiftField = value;
            }
        }
        
        /// <remarks/>
        public byte ShiftType {
            get {
                return this.shiftTypeField;
            }
            set {
                this.shiftTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Shift : BasicShift {
        
        private System.DateTime lunchInField;
        
        private System.DateTime lunchOutField;
        
        private int statusField;
        
        private bool isExcludeLunchHourField;
        
        private int excludeLunchHourField;
        
        private bool isSpecialShiftField;
        
        private double specialShiftRatioField;
        
        private System.DateTime modifiedDateField;
        
        private int modifiedUserField;
        
        private System.DateTime createDateField;
        
        private int createUserField;
        
        private int counterField;
        
        private bool isExcludeMealBreakInTopupField;
        
        private int totalNightShiftField;
        
        private bool isSpecialTimePeriodField;
        
        private System.DateTime specialTimePeriodFromField;
        
        private System.DateTime specialTimePeriodToField;
        
        private double specialTimePeriodHourlyRateField;
        
        private double totalSpecialTimePeriodHourField;
        
        private double hourlyRateField;
        
        private double lunchHourField;
        
        private double aMWorkingHourField;
        
        private double pMWorkingHourField;
        
        private int dayToConvertField;
        
        private int swapToLeaveField;
        
        private int swapToLeaveMissingInOrOutField;
        
        private System.Nullable<int> lookUpShiftTypeField;
        
        private double dailyRateField;
        
        private bool isOverNightField;
        
        private int dutyLocationIDField;
        
        private t_CustomProp[] cpListField;
        
        private int sectionField;
        
        private bool isNoPaidRestDayField;
        
        private System.Nullable<int> payItemTypeIDField;
        
        /// <remarks/>
        public System.DateTime LunchIn {
            get {
                return this.lunchInField;
            }
            set {
                this.lunchInField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LunchOut {
            get {
                return this.lunchOutField;
            }
            set {
                this.lunchOutField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public bool IsExcludeLunchHour {
            get {
                return this.isExcludeLunchHourField;
            }
            set {
                this.isExcludeLunchHourField = value;
            }
        }
        
        /// <remarks/>
        public int ExcludeLunchHour {
            get {
                return this.excludeLunchHourField;
            }
            set {
                this.excludeLunchHourField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSpecialShift {
            get {
                return this.isSpecialShiftField;
            }
            set {
                this.isSpecialShiftField = value;
            }
        }
        
        /// <remarks/>
        public double SpecialShiftRatio {
            get {
                return this.specialShiftRatioField;
            }
            set {
                this.specialShiftRatioField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public int ModifiedUser {
            get {
                return this.modifiedUserField;
            }
            set {
                this.modifiedUserField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public int CreateUser {
            get {
                return this.createUserField;
            }
            set {
                this.createUserField = value;
            }
        }
        
        /// <remarks/>
        public int Counter {
            get {
                return this.counterField;
            }
            set {
                this.counterField = value;
            }
        }
        
        /// <remarks/>
        public bool IsExcludeMealBreakInTopup {
            get {
                return this.isExcludeMealBreakInTopupField;
            }
            set {
                this.isExcludeMealBreakInTopupField = value;
            }
        }
        
        /// <remarks/>
        public int TotalNightShift {
            get {
                return this.totalNightShiftField;
            }
            set {
                this.totalNightShiftField = value;
            }
        }
        
        /// <remarks/>
        public bool IsSpecialTimePeriod {
            get {
                return this.isSpecialTimePeriodField;
            }
            set {
                this.isSpecialTimePeriodField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SpecialTimePeriodFrom {
            get {
                return this.specialTimePeriodFromField;
            }
            set {
                this.specialTimePeriodFromField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SpecialTimePeriodTo {
            get {
                return this.specialTimePeriodToField;
            }
            set {
                this.specialTimePeriodToField = value;
            }
        }
        
        /// <remarks/>
        public double SpecialTimePeriodHourlyRate {
            get {
                return this.specialTimePeriodHourlyRateField;
            }
            set {
                this.specialTimePeriodHourlyRateField = value;
            }
        }
        
        /// <remarks/>
        public double TotalSpecialTimePeriodHour {
            get {
                return this.totalSpecialTimePeriodHourField;
            }
            set {
                this.totalSpecialTimePeriodHourField = value;
            }
        }
        
        /// <remarks/>
        public double HourlyRate {
            get {
                return this.hourlyRateField;
            }
            set {
                this.hourlyRateField = value;
            }
        }
        
        /// <remarks/>
        public double LunchHour {
            get {
                return this.lunchHourField;
            }
            set {
                this.lunchHourField = value;
            }
        }
        
        /// <remarks/>
        public double AMWorkingHour {
            get {
                return this.aMWorkingHourField;
            }
            set {
                this.aMWorkingHourField = value;
            }
        }
        
        /// <remarks/>
        public double PMWorkingHour {
            get {
                return this.pMWorkingHourField;
            }
            set {
                this.pMWorkingHourField = value;
            }
        }
        
        /// <remarks/>
        public int DayToConvert {
            get {
                return this.dayToConvertField;
            }
            set {
                this.dayToConvertField = value;
            }
        }
        
        /// <remarks/>
        public int SwapToLeave {
            get {
                return this.swapToLeaveField;
            }
            set {
                this.swapToLeaveField = value;
            }
        }
        
        /// <remarks/>
        public int SwapToLeaveMissingInOrOut {
            get {
                return this.swapToLeaveMissingInOrOutField;
            }
            set {
                this.swapToLeaveMissingInOrOutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LookUpShiftType {
            get {
                return this.lookUpShiftTypeField;
            }
            set {
                this.lookUpShiftTypeField = value;
            }
        }
        
        /// <remarks/>
        public double DailyRate {
            get {
                return this.dailyRateField;
            }
            set {
                this.dailyRateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsOverNight {
            get {
                return this.isOverNightField;
            }
            set {
                this.isOverNightField = value;
            }
        }
        
        /// <remarks/>
        public int DutyLocationID {
            get {
                return this.dutyLocationIDField;
            }
            set {
                this.dutyLocationIDField = value;
            }
        }
        
        /// <remarks/>
        public t_CustomProp[] cpList {
            get {
                return this.cpListField;
            }
            set {
                this.cpListField = value;
            }
        }
        
        /// <remarks/>
        public int Section {
            get {
                return this.sectionField;
            }
            set {
                this.sectionField = value;
            }
        }
        
        /// <remarks/>
        public bool IsNoPaidRestDay {
            get {
                return this.isNoPaidRestDayField;
            }
            set {
                this.isNoPaidRestDayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PayItemTypeID {
            get {
                return this.payItemTypeIDField;
            }
            set {
                this.payItemTypeIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAllLeaveInfoCompletedEventHandler(object sender, GetAllLeaveInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllLeaveInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllLeaveInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LeaveInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LeaveInfo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetSystemParameterCompletedEventHandler(object sender, GetSystemParameterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemParameterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemParameterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetShiftInfoByIDCompletedEventHandler(object sender, GetShiftInfoByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShiftInfoByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShiftInfoByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Shift Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Shift)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteOverlapRangeFromDate1CompletedEventHandler(object sender, DeleteOverlapRangeFromDate1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOverlapRangeFromDate1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOverlapRangeFromDate1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<System.DateTime> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<System.DateTime>)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Nullable<System.DateTime> newEnd1 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<System.DateTime>)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public System.Nullable<System.DateTime> newStart2 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<System.DateTime>)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public System.Nullable<System.DateTime> newEnd2 {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<System.DateTime>)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetRealTotalCompletedEventHandler(object sender, GetRealTotalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRealTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRealTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetCompanyCodeCompletedEventHandler(object sender, GetCompanyCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompanyCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompanyCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ExecSqlCommandCompletedEventHandler(object sender, ExecSqlCommandCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecSqlCommandCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecSqlCommandCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ExecFn_checkmsgCompletedEventHandler(object sender, ExecFn_checkmsgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecFn_checkmsgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecFn_checkmsgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetLeaveSectionsCompletedEventHandler(object sender, GetLeaveSectionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLeaveSectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLeaveSectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591