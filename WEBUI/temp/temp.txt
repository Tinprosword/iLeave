 #region batch
        public static List<MODEL.Apply.LeaveBatch> getLeaveBatch(int uid)
        {
            DateTime leaveFrom = System.DateTime.Parse("1900-01-01");
            DateTime leaveTo = System.DateTime.Parse("3000-01-01");
            return getLeaveBatch(uid, leaveFrom, leaveTo);
        }

        public static List<MODEL.Apply.LeaveBatch> getLeaveBatch(int uid, DateTime from)
        {
            DateTime leaveTo = System.DateTime.Parse("3000-01-01");
            return getLeaveBatch(uid, from, leaveTo);
        }

        public static List<MODEL.Apply.LeaveBatch> getLeaveBatch(int uid, DateTime from ,DateTime to)
        {
            List<MODEL.Apply.LeaveData> data = new List<MODEL.Apply.LeaveData>();
            int[] staffids = BLL.Staff.GetStaffids(uid);
            DAL.WebReference_leave.StaffLeaveDetailInBatch[] leaves = BLL.Leave.GetOnlineStaffLeaveRecordByStaffIDBatchMode(staffids, from, to);
            return ConverWSToLocalModal(leaves);
        }

        private static List<MODEL.Apply.LeaveBatch> ConverWSToLocalModal(DAL.WebReference_leave.StaffLeaveDetailInBatch[] DataSource)
        {
            List<MODEL.Apply.LeaveBatch> result = new List<MODEL.Apply.LeaveBatch>();
            if (DataSource != null && DataSource.Count() > 0)
            {
                for (int i = 0; i < DataSource.Count(); i++)
                {
                    int RequestID = DataSource[i].RequestID;
                    string name = DataSource[i].EngName;
                    string date = DataSource[i].StartDate.ToString("yyy-MM-dd") + "_" + DataSource[i].EndDate.ToString("yyy-MM-dd") + "(" + DataSource[i].NoOfDays + "D)";
                    int sectionid = 0;
                    int typeid = DataSource[i].TypeID;
                    string typeCode = DataSource[i].Type;
                    string typeDescription = DataSource[i].Type;//todo
                    int status = DataSource[i].Status;
                    string statusStr = ((DAL.WebReference_leave.ApprovalRequestStatus)(DataSource[i].Status)).ToString();
                    MODEL.Apply.LeaveBatch TempItem = new MODEL.Apply.LeaveBatch(name, date, sectionid, typeid, status, statusStr, typeCode, typeDescription,RequestID);
                    result.Add(TempItem);
                }
            }
            return result;
        }

        #endregion