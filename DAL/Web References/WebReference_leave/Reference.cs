//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace DAL.WebReference_leave {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="LeaveManagementV2Soap", Namespace="http://tempuri.org/")]
    public partial class LeaveManagementV2 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertOnlineLeaveApplicationRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLeaveCalculationTypesForLeaveTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateNewRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApproveRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback RejectRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllLeaveMasterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLeaveMasterByEmploymentIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOnlineStaffLeaveRecordByStaffID_discardOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public LeaveManagementV2() {
            this.Url = global::DAL.Properties.Settings.Default.DAL_WebReference_leave_LeaveManagementV2;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertOnlineLeaveApplicationRequestCompletedEventHandler InsertOnlineLeaveApplicationRequestCompleted;
        
        /// <remarks/>
        public event GetLeaveCalculationTypesForLeaveTypeCompletedEventHandler GetLeaveCalculationTypesForLeaveTypeCompleted;
        
        /// <remarks/>
        public event CreateNewRequestCompletedEventHandler CreateNewRequestCompleted;
        
        /// <remarks/>
        public event ApproveRequestCompletedEventHandler ApproveRequestCompleted;
        
        /// <remarks/>
        public event CancelRequestCompletedEventHandler CancelRequestCompleted;
        
        /// <remarks/>
        public event RejectRequestCompletedEventHandler RejectRequestCompleted;
        
        /// <remarks/>
        public event GetAllLeaveMasterCompletedEventHandler GetAllLeaveMasterCompleted;
        
        /// <remarks/>
        public event GetLeaveMasterByEmploymentIDCompletedEventHandler GetLeaveMasterByEmploymentIDCompleted;
        
        /// <remarks/>
        public event GetOnlineStaffLeaveRecordByStaffID_discardCompletedEventHandler GetOnlineStaffLeaveRecordByStaffID_discardCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertOnlineLeaveApplicationRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ErrorMessageInfo InsertOnlineLeaveApplicationRequest(StaffLeaveRequest[] poStaffLeaveRequest, ApprovalRequestStatus p_enumStatus, int piUserID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> piWorkflowDelegationToStaffID) {
            object[] results = this.Invoke("InsertOnlineLeaveApplicationRequest", new object[] {
                        poStaffLeaveRequest,
                        p_enumStatus,
                        piUserID,
                        piWorkflowDelegationToStaffID});
            return ((ErrorMessageInfo)(results[0]));
        }
        
        /// <remarks/>
        public void InsertOnlineLeaveApplicationRequestAsync(StaffLeaveRequest[] poStaffLeaveRequest, ApprovalRequestStatus p_enumStatus, int piUserID, System.Nullable<int> piWorkflowDelegationToStaffID) {
            this.InsertOnlineLeaveApplicationRequestAsync(poStaffLeaveRequest, p_enumStatus, piUserID, piWorkflowDelegationToStaffID, null);
        }
        
        /// <remarks/>
        public void InsertOnlineLeaveApplicationRequestAsync(StaffLeaveRequest[] poStaffLeaveRequest, ApprovalRequestStatus p_enumStatus, int piUserID, System.Nullable<int> piWorkflowDelegationToStaffID, object userState) {
            if ((this.InsertOnlineLeaveApplicationRequestOperationCompleted == null)) {
                this.InsertOnlineLeaveApplicationRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOnlineLeaveApplicationRequestOperationCompleted);
            }
            this.InvokeAsync("InsertOnlineLeaveApplicationRequest", new object[] {
                        poStaffLeaveRequest,
                        p_enumStatus,
                        piUserID,
                        piWorkflowDelegationToStaffID}, this.InsertOnlineLeaveApplicationRequestOperationCompleted, userState);
        }
        
        private void OnInsertOnlineLeaveApplicationRequestOperationCompleted(object arg) {
            if ((this.InsertOnlineLeaveApplicationRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertOnlineLeaveApplicationRequestCompleted(this, new InsertOnlineLeaveApplicationRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLeaveCalculationTypesForLeaveType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LeaveCalculationType[] GetLeaveCalculationTypesForLeaveType(int LeaveID, int StaffID, int EmploymentID) {
            object[] results = this.Invoke("GetLeaveCalculationTypesForLeaveType", new object[] {
                        LeaveID,
                        StaffID,
                        EmploymentID});
            return ((LeaveCalculationType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLeaveCalculationTypesForLeaveTypeAsync(int LeaveID, int StaffID, int EmploymentID) {
            this.GetLeaveCalculationTypesForLeaveTypeAsync(LeaveID, StaffID, EmploymentID, null);
        }
        
        /// <remarks/>
        public void GetLeaveCalculationTypesForLeaveTypeAsync(int LeaveID, int StaffID, int EmploymentID, object userState) {
            if ((this.GetLeaveCalculationTypesForLeaveTypeOperationCompleted == null)) {
                this.GetLeaveCalculationTypesForLeaveTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLeaveCalculationTypesForLeaveTypeOperationCompleted);
            }
            this.InvokeAsync("GetLeaveCalculationTypesForLeaveType", new object[] {
                        LeaveID,
                        StaffID,
                        EmploymentID}, this.GetLeaveCalculationTypesForLeaveTypeOperationCompleted, userState);
        }
        
        private void OnGetLeaveCalculationTypesForLeaveTypeOperationCompleted(object arg) {
            if ((this.GetLeaveCalculationTypesForLeaveTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLeaveCalculationTypesForLeaveTypeCompleted(this, new GetLeaveCalculationTypesForLeaveTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateNewRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateNewRequest(MyWorkflowTask p_ExistingWorkflowTask, WorkflowTypeID TaskType, object p_ApprovalRequest, int p_intUserID, string p_strDescription, string p_strFormulatedURL, string baseURL, string p_strWorkflowInfoParameter, int p_intLeaveRequestID, int p_intEmploymentID) {
            object[] results = this.Invoke("CreateNewRequest", new object[] {
                        p_ExistingWorkflowTask,
                        TaskType,
                        p_ApprovalRequest,
                        p_intUserID,
                        p_strDescription,
                        p_strFormulatedURL,
                        baseURL,
                        p_strWorkflowInfoParameter,
                        p_intLeaveRequestID,
                        p_intEmploymentID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateNewRequestAsync(MyWorkflowTask p_ExistingWorkflowTask, WorkflowTypeID TaskType, object p_ApprovalRequest, int p_intUserID, string p_strDescription, string p_strFormulatedURL, string baseURL, string p_strWorkflowInfoParameter, int p_intLeaveRequestID, int p_intEmploymentID) {
            this.CreateNewRequestAsync(p_ExistingWorkflowTask, TaskType, p_ApprovalRequest, p_intUserID, p_strDescription, p_strFormulatedURL, baseURL, p_strWorkflowInfoParameter, p_intLeaveRequestID, p_intEmploymentID, null);
        }
        
        /// <remarks/>
        public void CreateNewRequestAsync(MyWorkflowTask p_ExistingWorkflowTask, WorkflowTypeID TaskType, object p_ApprovalRequest, int p_intUserID, string p_strDescription, string p_strFormulatedURL, string baseURL, string p_strWorkflowInfoParameter, int p_intLeaveRequestID, int p_intEmploymentID, object userState) {
            if ((this.CreateNewRequestOperationCompleted == null)) {
                this.CreateNewRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateNewRequestOperationCompleted);
            }
            this.InvokeAsync("CreateNewRequest", new object[] {
                        p_ExistingWorkflowTask,
                        TaskType,
                        p_ApprovalRequest,
                        p_intUserID,
                        p_strDescription,
                        p_strFormulatedURL,
                        baseURL,
                        p_strWorkflowInfoParameter,
                        p_intLeaveRequestID,
                        p_intEmploymentID}, this.CreateNewRequestOperationCompleted, userState);
        }
        
        private void OnCreateNewRequestOperationCompleted(object arg) {
            if ((this.CreateNewRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateNewRequestCompleted(this, new CreateNewRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ApproveRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ApproveRequest(MyWorkflowTask WorkflowTaskObject, WorkflowTypeID TaskType, object p_ApprovalRequest, int UserID, string Description, string FormulatedURL, string baseURL) {
            this.Invoke("ApproveRequest", new object[] {
                        WorkflowTaskObject,
                        TaskType,
                        p_ApprovalRequest,
                        UserID,
                        Description,
                        FormulatedURL,
                        baseURL});
        }
        
        /// <remarks/>
        public void ApproveRequestAsync(MyWorkflowTask WorkflowTaskObject, WorkflowTypeID TaskType, object p_ApprovalRequest, int UserID, string Description, string FormulatedURL, string baseURL) {
            this.ApproveRequestAsync(WorkflowTaskObject, TaskType, p_ApprovalRequest, UserID, Description, FormulatedURL, baseURL, null);
        }
        
        /// <remarks/>
        public void ApproveRequestAsync(MyWorkflowTask WorkflowTaskObject, WorkflowTypeID TaskType, object p_ApprovalRequest, int UserID, string Description, string FormulatedURL, string baseURL, object userState) {
            if ((this.ApproveRequestOperationCompleted == null)) {
                this.ApproveRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApproveRequestOperationCompleted);
            }
            this.InvokeAsync("ApproveRequest", new object[] {
                        WorkflowTaskObject,
                        TaskType,
                        p_ApprovalRequest,
                        UserID,
                        Description,
                        FormulatedURL,
                        baseURL}, this.ApproveRequestOperationCompleted, userState);
        }
        
        private void OnApproveRequestOperationCompleted(object arg) {
            if ((this.ApproveRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApproveRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelRequest(MyWorkflowTask WorkflowTaskObject, WorkflowTypeID TaskType, object p_ApprovalRequest, int UserID, string Description, string FormulatedURL, string baseURL) {
            this.Invoke("CancelRequest", new object[] {
                        WorkflowTaskObject,
                        TaskType,
                        p_ApprovalRequest,
                        UserID,
                        Description,
                        FormulatedURL,
                        baseURL});
        }
        
        /// <remarks/>
        public void CancelRequestAsync(MyWorkflowTask WorkflowTaskObject, WorkflowTypeID TaskType, object p_ApprovalRequest, int UserID, string Description, string FormulatedURL, string baseURL) {
            this.CancelRequestAsync(WorkflowTaskObject, TaskType, p_ApprovalRequest, UserID, Description, FormulatedURL, baseURL, null);
        }
        
        /// <remarks/>
        public void CancelRequestAsync(MyWorkflowTask WorkflowTaskObject, WorkflowTypeID TaskType, object p_ApprovalRequest, int UserID, string Description, string FormulatedURL, string baseURL, object userState) {
            if ((this.CancelRequestOperationCompleted == null)) {
                this.CancelRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelRequestOperationCompleted);
            }
            this.InvokeAsync("CancelRequest", new object[] {
                        WorkflowTaskObject,
                        TaskType,
                        p_ApprovalRequest,
                        UserID,
                        Description,
                        FormulatedURL,
                        baseURL}, this.CancelRequestOperationCompleted, userState);
        }
        
        private void OnCancelRequestOperationCompleted(object arg) {
            if ((this.CancelRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RejectRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RejectRequest(MyWorkflowTask WorkflowTaskObject, WorkflowTypeID TaskType, object p_ApprovalRequest, int UserID, string p_strDescription, string FormulatedURL, string baseURL) {
            this.Invoke("RejectRequest", new object[] {
                        WorkflowTaskObject,
                        TaskType,
                        p_ApprovalRequest,
                        UserID,
                        p_strDescription,
                        FormulatedURL,
                        baseURL});
        }
        
        /// <remarks/>
        public void RejectRequestAsync(MyWorkflowTask WorkflowTaskObject, WorkflowTypeID TaskType, object p_ApprovalRequest, int UserID, string p_strDescription, string FormulatedURL, string baseURL) {
            this.RejectRequestAsync(WorkflowTaskObject, TaskType, p_ApprovalRequest, UserID, p_strDescription, FormulatedURL, baseURL, null);
        }
        
        /// <remarks/>
        public void RejectRequestAsync(MyWorkflowTask WorkflowTaskObject, WorkflowTypeID TaskType, object p_ApprovalRequest, int UserID, string p_strDescription, string FormulatedURL, string baseURL, object userState) {
            if ((this.RejectRequestOperationCompleted == null)) {
                this.RejectRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRejectRequestOperationCompleted);
            }
            this.InvokeAsync("RejectRequest", new object[] {
                        WorkflowTaskObject,
                        TaskType,
                        p_ApprovalRequest,
                        UserID,
                        p_strDescription,
                        FormulatedURL,
                        baseURL}, this.RejectRequestOperationCompleted, userState);
        }
        
        private void OnRejectRequestOperationCompleted(object arg) {
            if ((this.RejectRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RejectRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllLeaveMaster", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LeaveRequestMaster[] GetAllLeaveMaster() {
            object[] results = this.Invoke("GetAllLeaveMaster", new object[0]);
            return ((LeaveRequestMaster[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllLeaveMasterAsync() {
            this.GetAllLeaveMasterAsync(null);
        }
        
        /// <remarks/>
        public void GetAllLeaveMasterAsync(object userState) {
            if ((this.GetAllLeaveMasterOperationCompleted == null)) {
                this.GetAllLeaveMasterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllLeaveMasterOperationCompleted);
            }
            this.InvokeAsync("GetAllLeaveMaster", new object[0], this.GetAllLeaveMasterOperationCompleted, userState);
        }
        
        private void OnGetAllLeaveMasterOperationCompleted(object arg) {
            if ((this.GetAllLeaveMasterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllLeaveMasterCompleted(this, new GetAllLeaveMasterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLeaveMasterByEmploymentID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LeaveRequestMaster[] GetLeaveMasterByEmploymentID(int employmentID) {
            object[] results = this.Invoke("GetLeaveMasterByEmploymentID", new object[] {
                        employmentID});
            return ((LeaveRequestMaster[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLeaveMasterByEmploymentIDAsync(int employmentID) {
            this.GetLeaveMasterByEmploymentIDAsync(employmentID, null);
        }
        
        /// <remarks/>
        public void GetLeaveMasterByEmploymentIDAsync(int employmentID, object userState) {
            if ((this.GetLeaveMasterByEmploymentIDOperationCompleted == null)) {
                this.GetLeaveMasterByEmploymentIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLeaveMasterByEmploymentIDOperationCompleted);
            }
            this.InvokeAsync("GetLeaveMasterByEmploymentID", new object[] {
                        employmentID}, this.GetLeaveMasterByEmploymentIDOperationCompleted, userState);
        }
        
        private void OnGetLeaveMasterByEmploymentIDOperationCompleted(object arg) {
            if ((this.GetLeaveMasterByEmploymentIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLeaveMasterByEmploymentIDCompleted(this, new GetLeaveMasterByEmploymentIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOnlineStaffLeaveRecordByStaffID_discard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public StaffLeaveRequest[] GetOnlineStaffLeaveRecordByStaffID_discard(int[] p_intArrStaffID) {
            object[] results = this.Invoke("GetOnlineStaffLeaveRecordByStaffID_discard", new object[] {
                        p_intArrStaffID});
            return ((StaffLeaveRequest[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOnlineStaffLeaveRecordByStaffID_discardAsync(int[] p_intArrStaffID) {
            this.GetOnlineStaffLeaveRecordByStaffID_discardAsync(p_intArrStaffID, null);
        }
        
        /// <remarks/>
        public void GetOnlineStaffLeaveRecordByStaffID_discardAsync(int[] p_intArrStaffID, object userState) {
            if ((this.GetOnlineStaffLeaveRecordByStaffID_discardOperationCompleted == null)) {
                this.GetOnlineStaffLeaveRecordByStaffID_discardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOnlineStaffLeaveRecordByStaffID_discardOperationCompleted);
            }
            this.InvokeAsync("GetOnlineStaffLeaveRecordByStaffID_discard", new object[] {
                        p_intArrStaffID}, this.GetOnlineStaffLeaveRecordByStaffID_discardOperationCompleted, userState);
        }
        
        private void OnGetOnlineStaffLeaveRecordByStaffID_discardOperationCompleted(object arg) {
            if ((this.GetOnlineStaffLeaveRecordByStaffID_discardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOnlineStaffLeaveRecordByStaffID_discardCompleted(this, new GetOnlineStaffLeaveRecordByStaffID_discardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class StaffLeaveRequest {
        
        private int idField;
        
        private int statusField;
        
        private int employmentIDField;
        
        private int leaveIDField;
        
        private string leaveTypeNameField;
        
        private System.DateTime leaveDateField;
        
        private bool isHalfDayField;
        
        private double unitField;
        
        private string remarksField;
        
        private string deleteKeyField;
        
        private string descriptionField;
        
        private System.DateTime createDateField;
        
        private int sectionField;
        
        private string employmentNumberField;
        
        private string compareKeyField;
        
        private string nameField;
        
        private string nameCHField;
        
        private string holidayCodeField;
        
        private int leaveCalculationTypeIDField;
        
        private string leaveCalculationTypeDescField;
        
        private int firstEmploymentIDField;
        
        private string firstEmploymentNumberField;
        
        private bool isApprovedField;
        
        private int requestIDField;
        
        private System.Nullable<int> delegationToStaffIDField;
        
        private double leaveHoursField;
        
        private double totalWorkHoursField;
        
        private double sectionsField;
        
        private System.DateTime leaveHoursFromField;
        
        private System.DateTime leaveHoursToField;
        
        private int displaySectionField;
        
        private string displayUnitField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int EmploymentID {
            get {
                return this.employmentIDField;
            }
            set {
                this.employmentIDField = value;
            }
        }
        
        /// <remarks/>
        public int LeaveID {
            get {
                return this.leaveIDField;
            }
            set {
                this.leaveIDField = value;
            }
        }
        
        /// <remarks/>
        public string LeaveTypeName {
            get {
                return this.leaveTypeNameField;
            }
            set {
                this.leaveTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LeaveDate {
            get {
                return this.leaveDateField;
            }
            set {
                this.leaveDateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsHalfDay {
            get {
                return this.isHalfDayField;
            }
            set {
                this.isHalfDayField = value;
            }
        }
        
        /// <remarks/>
        public double Unit {
            get {
                return this.unitField;
            }
            set {
                this.unitField = value;
            }
        }
        
        /// <remarks/>
        public string Remarks {
            get {
                return this.remarksField;
            }
            set {
                this.remarksField = value;
            }
        }
        
        /// <remarks/>
        public string DeleteKey {
            get {
                return this.deleteKeyField;
            }
            set {
                this.deleteKeyField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public int Section {
            get {
                return this.sectionField;
            }
            set {
                this.sectionField = value;
            }
        }
        
        /// <remarks/>
        public string EmploymentNumber {
            get {
                return this.employmentNumberField;
            }
            set {
                this.employmentNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CompareKey {
            get {
                return this.compareKeyField;
            }
            set {
                this.compareKeyField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string NameCH {
            get {
                return this.nameCHField;
            }
            set {
                this.nameCHField = value;
            }
        }
        
        /// <remarks/>
        public string HolidayCode {
            get {
                return this.holidayCodeField;
            }
            set {
                this.holidayCodeField = value;
            }
        }
        
        /// <remarks/>
        public int LeaveCalculationTypeID {
            get {
                return this.leaveCalculationTypeIDField;
            }
            set {
                this.leaveCalculationTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public string LeaveCalculationTypeDesc {
            get {
                return this.leaveCalculationTypeDescField;
            }
            set {
                this.leaveCalculationTypeDescField = value;
            }
        }
        
        /// <remarks/>
        public int FirstEmploymentID {
            get {
                return this.firstEmploymentIDField;
            }
            set {
                this.firstEmploymentIDField = value;
            }
        }
        
        /// <remarks/>
        public string FirstEmploymentNumber {
            get {
                return this.firstEmploymentNumberField;
            }
            set {
                this.firstEmploymentNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool IsApproved {
            get {
                return this.isApprovedField;
            }
            set {
                this.isApprovedField = value;
            }
        }
        
        /// <remarks/>
        public int RequestID {
            get {
                return this.requestIDField;
            }
            set {
                this.requestIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> DelegationToStaffID {
            get {
                return this.delegationToStaffIDField;
            }
            set {
                this.delegationToStaffIDField = value;
            }
        }
        
        /// <remarks/>
        public double LeaveHours {
            get {
                return this.leaveHoursField;
            }
            set {
                this.leaveHoursField = value;
            }
        }
        
        /// <remarks/>
        public double TotalWorkHours {
            get {
                return this.totalWorkHoursField;
            }
            set {
                this.totalWorkHoursField = value;
            }
        }
        
        /// <remarks/>
        public double Sections {
            get {
                return this.sectionsField;
            }
            set {
                this.sectionsField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LeaveHoursFrom {
            get {
                return this.leaveHoursFromField;
            }
            set {
                this.leaveHoursFromField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LeaveHoursTo {
            get {
                return this.leaveHoursToField;
            }
            set {
                this.leaveHoursToField = value;
            }
        }
        
        /// <remarks/>
        public int DisplaySection {
            get {
                return this.displaySectionField;
            }
            set {
                this.displaySectionField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayUnit {
            get {
                return this.displayUnitField;
            }
            set {
                this.displayUnitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LeaveRequestMaster {
        
        private int requestIDField;
        
        private int employmentIDField;
        
        private System.DateTime createDateField;
        
        private System.DateTime leavefromField;
        
        private System.DateTime leavetoField;
        
        private double totaldaysField;
        
        private System.Nullable<int> delegationToStaffIDField;
        
        private string inputSourceField;
        
        private byte statusField;
        
        /// <remarks/>
        public int RequestID {
            get {
                return this.requestIDField;
            }
            set {
                this.requestIDField = value;
            }
        }
        
        /// <remarks/>
        public int employmentID {
            get {
                return this.employmentIDField;
            }
            set {
                this.employmentIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime createDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime leavefrom {
            get {
                return this.leavefromField;
            }
            set {
                this.leavefromField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime leaveto {
            get {
                return this.leavetoField;
            }
            set {
                this.leavetoField = value;
            }
        }
        
        /// <remarks/>
        public double totaldays {
            get {
                return this.totaldaysField;
            }
            set {
                this.totaldaysField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> DelegationToStaffID {
            get {
                return this.delegationToStaffIDField;
            }
            set {
                this.delegationToStaffIDField = value;
            }
        }
        
        /// <remarks/>
        public string inputSource {
            get {
                return this.inputSourceField;
            }
            set {
                this.inputSourceField = value;
            }
        }
        
        /// <remarks/>
        public byte Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MyWorkflowTask {
        
        private int idField;
        
        private int userIDField;
        
        private int inOutTypeIDField;
        
        private int typeIDField;
        
        private int workflowInfoIDField;
        
        private int currentStepField;
        
        private string typeNameField;
        
        private string descriptionField;
        
        private string formulatedURLField;
        
        private int leaveRequestIDField;
        
        private System.DateTime modifiedDateField;
        
        private int modifiedUserField;
        
        private System.DateTime createDateField;
        
        private int createUserField;
        
        private bool isReadField;
        
        private string remarkField;
        
        private string fromUserNameField;
        
        private int statusField;
        
        private int employmentIDField;
        
        private string positionDescriptionField;
        
        private string toUserNameField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public int InOutTypeID {
            get {
                return this.inOutTypeIDField;
            }
            set {
                this.inOutTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public int TypeID {
            get {
                return this.typeIDField;
            }
            set {
                this.typeIDField = value;
            }
        }
        
        /// <remarks/>
        public int WorkflowInfoID {
            get {
                return this.workflowInfoIDField;
            }
            set {
                this.workflowInfoIDField = value;
            }
        }
        
        /// <remarks/>
        public int CurrentStep {
            get {
                return this.currentStepField;
            }
            set {
                this.currentStepField = value;
            }
        }
        
        /// <remarks/>
        public string TypeName {
            get {
                return this.typeNameField;
            }
            set {
                this.typeNameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string FormulatedURL {
            get {
                return this.formulatedURLField;
            }
            set {
                this.formulatedURLField = value;
            }
        }
        
        /// <remarks/>
        public int LeaveRequestID {
            get {
                return this.leaveRequestIDField;
            }
            set {
                this.leaveRequestIDField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public int ModifiedUser {
            get {
                return this.modifiedUserField;
            }
            set {
                this.modifiedUserField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public int CreateUser {
            get {
                return this.createUserField;
            }
            set {
                this.createUserField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRead {
            get {
                return this.isReadField;
            }
            set {
                this.isReadField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        public string FromUserName {
            get {
                return this.fromUserNameField;
            }
            set {
                this.fromUserNameField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int EmploymentID {
            get {
                return this.employmentIDField;
            }
            set {
                this.employmentIDField = value;
            }
        }
        
        /// <remarks/>
        public string PositionDescription {
            get {
                return this.positionDescriptionField;
            }
            set {
                this.positionDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ToUserName {
            get {
                return this.toUserNameField;
            }
            set {
                this.toUserNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LeaveCalculationType {
        
        private int idField;
        
        private string descriptionField;
        
        private System.DateTime modifiedDateField;
        
        private int modifiedUserField;
        
        private System.DateTime createDateField;
        
        private int createUserField;
        
        private int statusField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                this.modifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public int ModifiedUser {
            get {
                return this.modifiedUserField;
            }
            set {
                this.modifiedUserField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public int CreateUser {
            get {
                return this.createUserField;
            }
            set {
                this.createUserField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ErrorMessageItem {
        
        private bool isMessageListField;
        
        private string messageField;
        
        private string messageParameter1Field;
        
        private string messageParameter2Field;
        
        private string messageParameter3Field;
        
        private ErrorMessageSeverity severityField;
        
        /// <remarks/>
        public bool IsMessageList {
            get {
                return this.isMessageListField;
            }
            set {
                this.isMessageListField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string MessageParameter1 {
            get {
                return this.messageParameter1Field;
            }
            set {
                this.messageParameter1Field = value;
            }
        }
        
        /// <remarks/>
        public string MessageParameter2 {
            get {
                return this.messageParameter2Field;
            }
            set {
                this.messageParameter2Field = value;
            }
        }
        
        /// <remarks/>
        public string MessageParameter3 {
            get {
                return this.messageParameter3Field;
            }
            set {
                this.messageParameter3Field = value;
            }
        }
        
        /// <remarks/>
        public ErrorMessageSeverity Severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ErrorMessageSeverity {
        
        /// <remarks/>
        ERROR,
        
        /// <remarks/>
        WARNING,
        
        /// <remarks/>
        INFORMATION,
        
        /// <remarks/>
        VALIDATION,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ErrorMessageInfo {
        
        private int processIDField;
        
        private int[] processIDListField;
        
        private int affectedRecordCountField;
        
        private string errorMessageField;
        
        private string completedRatioField;
        
        private bool isMessageListField;
        
        private ErrorMessageItem[] errorMessageListField;
        
        /// <remarks/>
        public int ProcessID {
            get {
                return this.processIDField;
            }
            set {
                this.processIDField = value;
            }
        }
        
        /// <remarks/>
        public int[] ProcessIDList {
            get {
                return this.processIDListField;
            }
            set {
                this.processIDListField = value;
            }
        }
        
        /// <remarks/>
        public int AffectedRecordCount {
            get {
                return this.affectedRecordCountField;
            }
            set {
                this.affectedRecordCountField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public string CompletedRatio {
            get {
                return this.completedRatioField;
            }
            set {
                this.completedRatioField = value;
            }
        }
        
        /// <remarks/>
        public bool IsMessageList {
            get {
                return this.isMessageListField;
            }
            set {
                this.isMessageListField = value;
            }
        }
        
        /// <remarks/>
        public ErrorMessageItem[] ErrorMessageList {
            get {
                return this.errorMessageListField;
            }
            set {
                this.errorMessageListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ApprovalRequestStatus {
        
        /// <remarks/>
        SENDEMAIL,
        
        /// <remarks/>
        NEW,
        
        /// <remarks/>
        WAIT_FOR_APPROVE,
        
        /// <remarks/>
        APPROVE,
        
        /// <remarks/>
        REJECT,
        
        /// <remarks/>
        CANCEL,
        
        /// <remarks/>
        WAIT_FOR_CANCEL,
        
        /// <remarks/>
        CONFIRM_CANCEL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum WorkflowTypeID {
        
        /// <remarks/>
        LEAVE_APPLICATION,
        
        /// <remarks/>
        UPDATE_PERSON_INFO,
        
        /// <remarks/>
        UPDATE_TRAINING_RECORD,
        
        /// <remarks/>
        UPDATE_QUALIFICATION_RECORD,
        
        /// <remarks/>
        PAYROLL_LOCK,
        
        /// <remarks/>
        CLOT_APPLICATION,
        
        /// <remarks/>
        OT_APPROVAL,
        
        /// <remarks/>
        MEDICAL_CLAIM,
        
        /// <remarks/>
        ATTENDANCE,
        
        /// <remarks/>
        DOCTOR_VISIT,
        
        /// <remarks/>
        CANCEL_LEAVE_APPLICATION,
        
        /// <remarks/>
        EXPENSE_CLAIM,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void InsertOnlineLeaveApplicationRequestCompletedEventHandler(object sender, InsertOnlineLeaveApplicationRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertOnlineLeaveApplicationRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertOnlineLeaveApplicationRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ErrorMessageInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ErrorMessageInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetLeaveCalculationTypesForLeaveTypeCompletedEventHandler(object sender, GetLeaveCalculationTypesForLeaveTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLeaveCalculationTypesForLeaveTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLeaveCalculationTypesForLeaveTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LeaveCalculationType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LeaveCalculationType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CreateNewRequestCompletedEventHandler(object sender, CreateNewRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateNewRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateNewRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ApproveRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CancelRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void RejectRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAllLeaveMasterCompletedEventHandler(object sender, GetAllLeaveMasterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllLeaveMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllLeaveMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LeaveRequestMaster[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LeaveRequestMaster[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetLeaveMasterByEmploymentIDCompletedEventHandler(object sender, GetLeaveMasterByEmploymentIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLeaveMasterByEmploymentIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLeaveMasterByEmploymentIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LeaveRequestMaster[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LeaveRequestMaster[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetOnlineStaffLeaveRecordByStaffID_discardCompletedEventHandler(object sender, GetOnlineStaffLeaveRecordByStaffID_discardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOnlineStaffLeaveRecordByStaffID_discardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOnlineStaffLeaveRecordByStaffID_discardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public StaffLeaveRequest[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((StaffLeaveRequest[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591